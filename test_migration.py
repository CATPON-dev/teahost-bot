#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ —é–∑–µ—Ä–±–æ—Ç–æ–≤
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import system_manager as sm
import database as db
import server_config

async def test_migration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await db.init_pool()
    await db.init_db()
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–∏–≥—Ä–∞—Ü–∏–∏ —é–∑–µ—Ä–±–æ—Ç–æ–≤")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤
    servers = server_config.get_servers()
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {len(servers)}")
    
    for ip, details in servers.items():
        print(f"  - {ip}: {details.get('name', 'Unknown')} ({details.get('status', 'unknown')})")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —é–∑–µ—Ä–±–æ—Ç–æ–≤
    userbots = await db.get_all_userbots_full_info()
    print(f"\nü§ñ –ù–∞–π–¥–µ–Ω–æ —é–∑–µ—Ä–±–æ—Ç–æ–≤: {len(userbots)}")
    
    if userbots:
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —é–∑–µ—Ä–±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_ub = userbots[0]
        ub_username = test_ub['ub_username']
        current_server = test_ub['server_ip']
        
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —é–∑–µ—Ä–±–æ—Ç: {ub_username}")
        print(f"üìç –¢–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä: {current_server}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
        available_servers = await sm.get_available_servers_for_migration(ub_username, current_server)
        print(f"üìã –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: {len(available_servers)}")
        
        for server in available_servers:
            print(f"  - {server['ip']}: {server['name']} ({server['country']}, {server['city']})")
        
        if available_servers:
            print(f"\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
            print(f"üí° –î–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ {ub_username} –¥–æ—Å—Ç—É–ø–Ω–æ {len(available_servers)} —Å–µ—Ä–≤–µ—Ä–æ–≤")
        else:
            print(f"\n‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ {ub_username}")
    else:
        print("\n‚ö†Ô∏è –ù–µ—Ç —é–∑–µ—Ä–±–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

async def test_server_availability():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤")
    print("-" * 30)
    
    servers = server_config.get_servers()
    
    for ip, details in servers.items():
        if ip == sm.LOCAL_IP:
            continue
            
        print(f"üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º {ip}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ
        has_space = await sm.check_server_disk_space(ip, min_gb=2)
        print(f"  üíæ –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: {'‚úÖ' if has_space else '‚ùå'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
        status = details.get('status', 'unknown')
        print(f"  üìä –°—Ç–∞—Ç—É—Å: {status}")
        
        print()

if __name__ == "__main__":
    asyncio.run(test_migration())
    asyncio.run(test_server_availability()) 